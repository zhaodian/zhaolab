解决问题
========

解决问题的套路
--------------
提出有质量的问题是比较有难度的（这个需要一定的多维思考和创新能力），但是解决问题还是相对比较简单的，跟着套路走流程就行了：

- 哦！这里有个问题，So简单，直接灭了它；（小Case：简单到能直接解决）
- 哎呀！好像不是很简单啊，那找找有没有相同或类似的问题，有相同的直接用，有类似的改改说不定就能用了；（参考与借鉴）
- 啊！好像既不简单也找不到能参考的，哦，那就拿把“锤子”把这个问题给敲开（问题分解）变成一个个小问题，看看小问题是不是能解决或找到参考的，如果能，很好问题解决了，如果不能，“锤子”继续敲，直到问题变成小Case或有参考借鉴的为止；

总结一下，解决问题无非就是参考借鉴+问题分解。

实践环境的假设
--------------
能力如何来的？实践来的，实践需要有环境，我们对后续课程的实践环境做以下假设：

- 我们有很多Arduino开发板，开发板可以变成完成一项任务的模块，且只完成一项任务；
- 分解后的问题，能直接解决、参考解决、模块解决；
- 模块一般情况只有3种调用，初始化（模块的准备工作），Set操作（任务的参数设置），Get操作（获取结果），模块内部的实现方法不用过多关注，当然您如果感兴趣可以直接在Github上参阅源码。

以上假设的原因是因为：

- 儿童的文献检索能力毕竟有限，模块相当于把可参考的零件放在了儿童触手可及的地方；
- 每个模块只完成一项任务、只有3种调用保持了模块的简单性；
- 如没有现成可用的模块，可自行编写程序实现功能，或者连功能都不实现仅返回假数据仿真；
- 开源的Arduino开发板10-15元，闭源商业玩具动则几百几千；
- 开源的学得明白、自由度高。